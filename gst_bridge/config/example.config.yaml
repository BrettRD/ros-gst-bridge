gst_pipeline_node:
  ros__parameters:

    #######################################################################
    # These params are loaded by the pipeline node directly               #
    #######################################################################
    gst_plugins_required:
      - 'rosgstbridge'
      - 'videotestsrc'
      - 'audiotestsrc'
      - 'alsa'
      - 'webrtc'
      - 'nice'
      - 'opus'
      - 'vpx'
      - 'dtls'
      - 'srtp'
      - 'rtp'
      - 'rtpmanager'
      # - 'name-of-plugin'
    

    # workaround for config declarations not being able to hold complex objects
    # list of package_names, followed by package_name : plugin_subdir
    gst_plugin_ros_packages:
      - gst_bridge

    gst_plugin_ros_package_subdirs:
      gst_bridge: lib/gst_bridge/



    #######################################################################
    # List the gstreamer bins to generate, and provide descriptions later #
    #######################################################################

    #simple_bins:
    #  - audio_test
    #  - video_test

    webrtc_bins:
      - webrtc_example_bin

    #######################################################################
    # describe the gstreamer bins listed above                            #
    #######################################################################

    # assign the properties to each event handler named above
    audio_test:
      descr: 'audiotestsrc volume=0.3 is-live=true wave=red-noise ! queue ! audioconvert ! alsasink'
    video_test:
      descr: 'videotestsrc is-live=true pattern=ball ! queue ! ximagesink'
    mic_rossink_test:
      descr: 'alsasrc ! audioconvert ! rosaudiosink ros-name="audio_node" ros-topic="audio" ros-encoding="S16C2"'
    rossrc_rossink_test:
      descr: 'audiotestsrc volume=0.3 is-live=true wave=red-noise ! tee name=t ! queue ! rosaudiosink provide-clock=False ros-name="audio_node" ros-topic="audio" ros-encoding="S16C2" t. ! queue ! audioconvert ! alsasink'
    rossink_live_test:
      descr: 'audiotestsrc volume=0.3 is-live=true wave=red-noise ! tee name=t ! queue ! audioconvert ! alsasink t. ! queue !  rosaudiosink ros-name="audio_node" ros-topic="audio" ros-encoding="S16C2"'
    rossink_test:
      descr: 'audiotestsrc volume=0.3 is-live=true wave=red-noise ! queue ! audioconvert ! rosaudiosink ros-name="audio_node" ros-topic="audio" ros-encoding="S16C2"'



    # webrtc_bin creates a webrtc element and negotiates a connection with a remote peer
    # the transport (signalling transport) is used to hold the webrtc signalling protocol for peer discovery
    webrtc_example_bin:
      stun_server: 'stun://stun.l.google.com:19302'
      element_name: 'sendrecv'  # the name of the webrtc element in the middle of the pipeline, appears in diagnostics

      # normal operation
      #audio_src_bin_descr: ' audiotestsrc volume=0.3 is-live=true wave=red-noise ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay ! application/x-rtp,media=audio,encoding-name=OPUS,payload=96 ! queue '
      #video_src_bin_descr: ' videotestsrc is-live=true pattern=ball ! videoconvert ! queue ! vp8enc deadline=1 ! rtpvp8pay ! application/x-rtp,media=video,encoding-name=VP8,payload=97 ! queue '
      #video_sink_bin_descr: ' queue ! videoconvert ! ximagesink'
      #audio_sink_bin_descr: ' queue ! alsasink '

      # Demonstrates removing the first element from video_src_bin_descr when video_sink_bin_descr has a dangling src pad - this is very dirty code
      audio_src_bin_descr: ' audiotestsrc volume=0.0 is-live=true wave=red-noise ! audioconvert ! audioresample ! queue ! opusenc ! rtpopuspay ! application/x-rtp,media=audio,encoding-name=OPUS,payload=96 ! queue '
      video_src_bin_descr: ' videotestsrc pattern=ball name=src_swap ! videoconvert ! queue ! agingtv ! videoconvert ! tee name=chewed ! queue! videoconvert ! rosimagesink  chewed. ! queue ! vp8enc deadline=1 ! rtpvp8pay ! application/x-rtp,media=video,encoding-name=VP8,payload=97 ! queue '
      video_sink_bin_descr: ' queue ! videoconvert '  # ! ximagesink '
      audio_sink_bin_descr: ' queue ! fakesink '

      # select the signalling protocol handler, then declare properties for it.

      signalling: webrtc_transport_ws
      #signalling: webrtc_transport_ros
      
      #parameters for signalling over webrtc_transport_ws:
      signalling_server: 'wss://webrtc.nirbheek.in:8443'
      node_id: 1125
      peer_id: 4874
      
      #paramters for signalling over webrtc_transport_ros:  # not yet implemented
      sdp_pub_topic: 'webrtc_example_bin/sdp_out'
      sdp_sub_topic: 'webrtc_example_bin/sdp_in'
      ice_pub_topic: 'webrtc_example_bin/ice_in'
      ice_sub_topic: 'webrtc_example_bin/ice_in'
